---
- name: add postgres apt key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
  when: ansible_distribution in ('Ubuntu', 'Debian')

- name: add postgres apt repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"
    update_cache: yes
    state: present
  when: ansible_distribution in ('Ubuntu', 'Debian')

- name: install packages
  apt:
    pkg: "{{ item }}"
    state: latest
    force: yes
  with_items:
    - "postgresql-{{ postgres_version }}"
    - "postgresql-contrib-{{ postgres_version }}"
    - "postgresql-client-{{ postgres_version }}"
    - python-psycopg2
    - python3-psycopg2
  tags: postgres-packages

- name: install extra packages
  apt:
    pkg: "{{ item }}"
    state: latest
    force: yes
  with_items: "{{ postgres_extra_packages }}"
  when: postgres_extra_packages is defined
  tags: postgres-extra

- name: generate locales
  locale_gen:
    name: "{{ postgres_locale }}"
  register: gen_locale

- name: restart postgres for locale
  service:
    name: postgresql
    state: restarted
  when: gen_locale.changed

- name: create databases
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ item.value.database | default(item.key) }}"
    encoding: UTF-8
    lc_collate: "{{ postgres_locale }}"
    lc_ctype: "{{ postgres_locale }}"
    state: present
    template: template0
  with_dict: "{{ postgres_users }}"
  when: postgres_users is defined

- name: create users
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ item.key }}"
    db: "{{ item.value.database | default(item.key) }}"
    password: "{{ item.value.password }}"
    role_attr_flags: "{{ item.value.roles | default(postgres_default_roles) | join(',') }}"
    state: present
    encrypted: yes
  with_dict: "{{ postgres_users }}"
  when: postgres_users is defined
